[{"Media":"https://youtu.be/BH2KuPloAEI","Paper ID":"9","Paper Title":"Rapidly Prototyping MIDI Controllers with Web MIDI","Abstract":"MIDI (Musical Instrument Digital Interface) is the standard communication protocol to connect audio hardware and software. The protocol is commonly used to send messages from hardware MIDI controllers to software that controls music synthesis and playback. Although a variety of hardware and software MIDI controllers exist, they typically use traditional, skeuomorphic input modes like keys, buttons, faders, and knobs. Since 2015, web browsers started supporting this protocol through the Web MIDI API, opening up an enormous untapped potential of integrations.\n\nThis talk guides viewers through quickly prototyping web-based MIDI controllers utilizing the power of web browsers and the JavaScript ecosystem. These prototypes showcase innovative ways of controlling audio software by sending MIDI messages from the web browser, e.g. using a phone's touchscreen with pressure detection as 3-d input to control audio effects.\n\nThe talk consists of a series of example prototypes, written in plain JavaScript and running in Chrome. Prior knowledge of JavaScript or the MIDI protocol is not required, but helpful in fully understanding the examples. The first example simply sends a single MIDI message from the browser to the audio software. Then, examples ramp up in interactivity and complexity, e.g. controlling audio effects through machine-learning models. The important parts of each prototype's code fit onto 1-2 slides and are followed by a live demonstration.\n\nThe slides will be written in HTML and JavaScript themselves to allow neatless transitions from static slides to live examples. Every example contains a link to a fully-functional, open-source prototype (see https://github.com/max-vogler/midi) that viewers can run right in their browser.\n\nThe talk aims to excite the audience about:\n * Unlocking novel input sources for audio software by using the web browser and ecosystem.\n  * Iterating through prototypes quickly by using vanilla JavaScript with high-level APIs and libraries.","Author Names":"Max Vogler (Google)*","Author Emails":"max.vogler@gmail.com","Primary Contact Author Email":"max.vogler@gmail.com","Track Name":"Talk","Files":"Max Vogler - Rapidly Prototyping MIDI Controllers with Web MIDI.pdf (626917 bytes)","Pages":""},{"Media":"https://youtu.be/7OnMl15C1ZM","Paper ID":"17","Paper Title":"Testing MIDI applications","Abstract":"Testing is an important part of software development process.\nWe introduce three open source tools to facilitate testing MIDI applications.\n\nmidi-test ( https://github.com/jazz-soft/midi-test )\nThis tool allows to open real MIDI ports (visible by all MIDI applications),\nand manipulate them via JavaScript: connect, disconnect, emit MIDI messages,\nmonitor the received MIDI messages.\nCombined with JZZ.jz, it can simulate Web MIDI API as well.\n\nweb-midi-test ( https://github.com/jazz-soft/web-midi-test )\nThis is a fake Web MIDI API. Its ports are not visible by real MIDI applications,\nso they can be used only from JavaScript code.\nweb-midi-test is useful for writing unit tests that don't require browser,\nand for modeling corner cases, i.g.:\nport is visible but is taken by another application,\nuser allowed MIDI, but did not allow SysEx, etc...\nBoth midi-test and web-midi-test share the same API\nthat allow running both flavors of the same test.\n\ntest-midi-files ( https://github.com/jazz-soft/test-midi-files )\nThis framework allows producing MIDI files from readable JavaScript code.\n\nAll above testing tools have been successfully used by the Open Source community.","Author Names":"Sema Kachalo ()*","Author Emails":"sema@jazz-soft.net","Primary Contact Author Email":"sema@jazz-soft.net","Track Name":"Talk","Files":"camera-ready-v1.docx (27440 bytes); camera-ready-v2.docx (29267 bytes)","Pages":""},{"Media":"https://youtu.be/5K6GiLusIV0","Paper ID":"26","Paper Title":"Declarative Web Audio API","Abstract":"In this talk, we will explore differences between imperative and declarative approach to Web Audio API. We will see what it takes to turn Web Audio API declarative with dependency injection pattern also known as inversion of control and what benefits it brings. We will create basic proof of concept using plain JavaScript and compare it to more advanced code based on Angular framework. All these techniques will help us write reusable structures and program music with Web Audio API. On top of that, we will look at Web MIDI API and create playable synthesizer using same declarative approach so we can perform music live. We will also touch on how using this knowledge we can create a Guitar Hero-like keys playing and Karaoke singing game which can be played directly in the browser, even on modern smartphones.","Author Names":"Alexander Inkin (Tinkoff)*","Author Emails":"alexander@inkin.ru","Primary Contact Author Email":"alexander@inkin.ru","Track Name":"Talk","Files":"Declarative Web Audio API (camera ready).doc (46080 bytes)","Pages":""},{"Media":"https://youtu.be/kRYE1zi3Nrc","Paper ID":"34","Paper Title":"Bringing sport fans back into the arena with web technology","Abstract":"From it's very beginning the Web Audio conference was a place which showcased systems using web technology to enable remote audience participation. Numerous talks workshops and live performances were dedicated to this topic. But up until recently this was considered to be a nice add-on for live events outside of the Web Audio world. However the current pandemic changed this drastically.\n\nMany events can't be attended in person anymore. This is true for small concerts and conferences but also for usually well attended sports events. In many cases remote participation became the only possible form of participation. For sports events this imposes a special problem since the reactions and chants from the stands are considered to be a part of the experience. Therefore many TV stations choose to play artificial background noise when broadcasting sports events without any onsite spectators.\n\nI would like to present a system which uses web technologies to bring back the voices of sport fans into the arenas. It builds up on common rituals that many fans are used to. It's meant to be as less obtrusive as possible. It works by sending the announcements of the pa announcer to the fans at home. They can respond as they are used to. The responses get recorded as well and sent back. In the arena the players will hear the slightly delayed announcement together with the responses from their fans. The system is very scalable and can be used by as many people as would otherwise be in the stadium.","Author Names":"Christoph Guttandin (Media Codings)*","Author Emails":"chrisguttandin@web.de","Primary Contact Author Email":"chrisguttandin@web.de","Track Name":"Talk","Files":"","Pages":""},{"Media":"https://youtu.be/p6Tkd-8Wed8","Paper ID":"52","Paper Title":"Collab-Hub: A system for creating collaborative telematic music performances with web-based instruments and creative development platforms","Abstract":"Collab-Hub is a networking tool for sharing data across the internet for multimedia collaboration. Through Collab-Hub, web audio applications, custom hardware controllers/instruments, and digital instruments created for embedded and desktop computers can all be designed around a single framework, providing a unified approach to creating multi-modal networked experiences.\n\nIn this talk, we discuss the design of the Collab-Hub system and provide examples of using it to create interaction layouts between web-based instruments/interfaces and digital musical instruments designed in Max and Pure Data. We also showcase custom APIs for developing audiovisual software clients in Unity and hardware clients through Arduino. An analysis of pertinent historical precedents highlights the advantages Collab-Hub provides to artists who may not have experience developing collaborative projects between browsers and desktop software or may be entirely new to designing telematic and remote performance environments. A showcase of works created with Collab-Hub (featuring networked interactivity across the internet, digital instrument design through the aforementioned creative development platforms and the WebAudio API, and multimodal art technologies) demonstrates the wide variety of artistic endeavors made possible through the framework.","Author Names":"Anthony T Marasco (University of Texas Rio Grande Valley)*; Nick Hwang (University of Wisconsin-Whitewater); Eric Sheffield (Miami University)","Author Emails":"anthony.marasco@utrgv.edu; hwangn@uww.edu; sheffie@miamioh.edu","Primary Contact Author Email":"anthony.marasco@utrgv.edu","Track Name":"Talk","Files":"Collab_Hub__camera_ready.pdf (2434699 bytes)","Pages":""},{"Media":"https://youtu.be/jBiaZIRalX0","Paper ID":"54","Paper Title":"EMDM Online Concerts in the Pandemic: Bringing the Live to Live Streaming","Abstract":"To overcome the deficit of live events in 2020 and a lack of feeling of live performance through streaming, a trio of concerts were created using the web as a medium for performance. The first concert was an attempt to infuse live event dynamics into a series of recorded pieces. The second consisted of live performances presented in novel ways to the audience such as 360 degree video and composites of browser based and live-stream media. The third was performed entirely live with 11 isolated performers located in completely separate spaces. \n\nThis talk will cover the novelty of using a website and distributed performance tools as a platform for delivering live performance and reintroducing the audience/performer connection in mediated performance.","Author Names":"Jesse Allison (Louisiana State University)*","Author Emails":"jtallison@lsu.edu","Primary Contact Author Email":"jtallison@lsu.edu","Track Name":"Talk","Files":"54_EMDM_Online_Concert_WAC2021-Allison.pdf (1251576 bytes)","Pages":""},{"Media":"https://youtu.be/JQ3WSf8HD94","Paper ID":"59","Paper Title":"Antropoloops online music remix tool for education: A Web Audio API Case Study","Abstract":"In this talk we will explain why and how we used modern web technologies, and specifically, the Web Audio API to build a creative digital tool intended to be used in the entry levels of our educational system (primary and secondary education).\n\nWe are Rubén Alonso (artist and co-creator of “Antropoloops” project: a creative approach to ethnomusicology, where musical expressions from different cultures and times come into dialogue through electronic music) and Daniel Gómez (musician and software developer).\n\nWe are part of a team made up of artists, educators and technicians, that asked ourselves how to combine sound collage, body movement and electronics to celebrate and engage cultural diversity in educational environments.\n\nOver the last three years, in collaboration with Carasso Foundation, we have developed both a methodology and an online remixing tool (https://play.antropoloops.com) that aims to explore the potential of music remixing as a way to work towards cultural inclusion at schools.","Author Names":"Daniel Gómez (Antropoloops)*; Rubén Alonso (Antropoloops)","Author Emails":"danigb@gmail.com; rubenxito@gmail.com","Primary Contact Author Email":"danigb@gmail.com","Track Name":"Talk","Files":"Antropoloops online music remix tool for education - A Web Audio API Case Study - Extended Abstract.pdf (126347 bytes)","Pages":""},{"Media":"https://youtu.be/-JzeEjH6cLo","Paper ID":"60","Paper Title":"A multitrack reactive music player for the browser","Abstract":"Accompanying systems provide musical accompaniment to a human performer. These systems can adapt to music contextual changes like the tempo or the tonality, which makes them an interesting tool for music students. In this paper I describe a\nbrowser-based multitrack reactive music player. This player enables bringing up automatic accompanying systems to the browser. The player is implemented in TypeScript, using the web audio API and MIDI.js soundfonts.","Author Names":"Dani Martín (none)*","Author Emails":"dmartinmartinez@gmail.com","Primary Contact Author Email":"dmartinmartinez@gmail.com","Track Name":"Talk","Files":"multitrack-reactive-music-player(v2).pdf (211040 bytes)","Pages":""}]